import java.util.Scanner;

public class CodeThatSemi-Works {

	public static void main(String[] args) {
		System.out.println("Main Menu");
		System.out.println("TicTacToe Classic: Press 1 ");
		System.out.println("TicTacToe 5x5: press 2");
		
		char [] [] classicGameBoard = {{' ', '|', ' ', '|', ' '},
								{'-', '+', '-', '+', '-'},
								{' ', '|', ' ', '|', ' '},
								{'-', '+', '-', '+', '-'},
								{' ', '|', ' ', '|', ' '}};
		
		newBoard(classicGameBoard);
		checkWinner(classicGameBoard);
				
			Scanner sc = new Scanner(System.in);
			Scanner play= new Scanner(System.in);
			char symbol=' ';
			
			System.out.println("Please enter a number 1-9");
			while(checkWinner(classicGameBoard) ==false)	{	
			int player= play.nextInt();
			moveMaker(classicGameBoard,player, symbol);
			}
			
			checkWinner(classicGameBoard);
	}
	public static void newBoard(char[][] classicGameBoard) {
		for (char[] row : classicGameBoard) {
			for(char c : row ) {
				System.out.print(c);
			}
			System.out.println();
			}
		
	}


	public static void moveMaker(char[][] gameBoard,int placement, char symbol) {
		int turn= 0;
				if(turn == 0|| turn == 2|| turn == 4||turn ==6||turn == 8) {
					symbol='X';
				}
				if(turn == 1|| turn == 3|| turn == 5||turn ==7){
					symbol='O';
				}
				
					
				
				
				switch(placement) {
				case 1:
				 gameBoard[0][0] = symbol;
				 newBoard(gameBoard);
				 	break;
				case 2:
					 gameBoard[0][2] = symbol;
					 newBoard(gameBoard);
					 	break;
				case 3:
					 gameBoard[0][4] = symbol;
					 newBoard(gameBoard);
					 	break;
				case 4:
					 gameBoard[2][0] = symbol;
					 newBoard(gameBoard);
					 	break;
				case 5:
					 gameBoard[2][2] = symbol;
					 newBoard(gameBoard);
					 	break;
				case 6:
					 gameBoard[2][4] = symbol;
					 newBoard(gameBoard);
					 	break;
				case 7:
					 gameBoard[4][0] = symbol;
					 newBoard(gameBoard);
					 	break;
				case 8:
					 gameBoard[4][2] = symbol;
					 newBoard(gameBoard);
					 	break;
				case 9:
					 gameBoard[4][4] = symbol;
					 newBoard(gameBoard);
					 	break;
				}
				turn++;
				}
					 	
	public static boolean checkWinner(char[][] gameBoard) {
			if(gameBoard[0][0]=='X' && gameBoard[0][2]=='X' && gameBoard[0][4]=='X') {
				System.out.println("Player 1 wins!!!");
				return true;
			}
			if(gameBoard[0][0]=='O' && gameBoard[0][2]=='O' && gameBoard[0][4]=='O') {
				System.out.println("Player 2 wins!!!");
				return true;
			}
			if(gameBoard[0][0]=='X' && gameBoard[2][0]=='X' && gameBoard[4][0]=='X') {
					System.out.println("Player 1 is the Winner");
					return true;
				}
			if(gameBoard[0][0]=='O' && gameBoard[2][0]=='O' && gameBoard[4][0]=='O') {
				System.out.println("Player 1 is the Winner");
				return true;
			}
			if(gameBoard[0][0]=='X' && gameBoard[2][4]=='X' && gameBoard[4][4]=='X') {
				return true;
			}
			if(gameBoard[0][0]=='O' && gameBoard[2][4]=='O' && gameBoard[4][4]=='O') {
				return true;
			}
		
			if(gameBoard[2][0]=='X' && gameBoard[2][2]=='X'&& gameBoard[2][4]=='X'){
				return true;
			}
			if(gameBoard[2][0]=='O' && gameBoard[2][2]=='O'&& gameBoard[2][4]=='O'){
				return true;
			}

			if(gameBoard[4][0]=='X' && gameBoard[2][2]=='X' && gameBoard[0][4]=='X') {
				return true;
			}
			if(gameBoard[4][0]=='O' && gameBoard[2][2]=='O' && gameBoard[0][4]=='O') {
				return true;
			}
			if(gameBoard[4][0]=='X' && gameBoard[4][2]=='X' && gameBoard[4][4]=='X') {
				return true;
			}
			if(gameBoard[4][0]=='O' && gameBoard[4][2]=='O' && gameBoard[4][4]=='O') {
				return true;
			}
			if(gameBoard[0][4]=='X' && gameBoard[2][4]=='X' && gameBoard[4][4]=='X') {
				return true;
			}
			if(gameBoard[0][4]=='O' && gameBoard[2][4]=='O' && gameBoard[4][4]=='O') {
				return true;
			}
			else
				return false;
					 	 
	}
			
		}
